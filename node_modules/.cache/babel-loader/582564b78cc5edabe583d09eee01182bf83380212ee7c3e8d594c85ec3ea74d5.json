{"ast":null,"code":"var _jsxFileName = \"/Users/rambo/Desktop/not to do full stack/client/src/components/TaskContainer.js\";\nimport { Col, Row, Table } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TaskContainer = _ref => {\n  let {\n    list\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center\",\n        children: \"Entry List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        className: \"bg-transparent\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: list.map((item, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: i + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.hr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"buttons\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 19\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center\",\n        children: \"Bad List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 1\n  }, this);\n};\n_c = TaskContainer;\nvar _c;\n$RefreshReg$(_c, \"TaskContainer\");","map":{"version":3,"names":["Col","Row","Table","jsxDEV","_jsxDEV","TaskContainer","_ref","list","className","children","fileName","_jsxFileName","lineNumber","columnNumber","striped","bordered","hover","map","item","i","task","hr","_c","$RefreshReg$"],"sources":["/Users/rambo/Desktop/not to do full stack/client/src/components/TaskContainer.js"],"sourcesContent":["import { Col, Row, Table } from \"react-bootstrap\";\n\nexport const TaskContainer = ({ list}) =>{\n    return (\n<Row className=\"mt-5\">\n          <Col>\n            <h3 className=\"text-center\">Entry List</h3>\n            <hr />\n            <Table striped bordered hover className=\"bg-transparent\">\n              <tbody>\n                {list.map((item, i)=> (\n                <tr key={i}>\n                  <td>{i + 1}</td>\n                  <td>{item.task}</td>\n                  <td>{item.hr}</td>\n                  <td>buttons</td>\n                </tr>\n                ))}\n              </tbody>\n            </Table>\n          </Col>\n          <Col>\n            <h3 className=\"text-center\">Bad List</h3>\n            <hr />{\" \"}\n          </Col>\n        </Row>\n    );\n\n    };"],"mappings":";AAAA,SAASA,GAAG,EAAEC,GAAG,EAAEC,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,OAAO,MAAMC,aAAa,GAAGC,IAAA,IAAY;EAAA,IAAX;IAAEC;EAAI,CAAC,GAAAD,IAAA;EACjC,oBACJF,OAAA,CAACH,GAAG;IAACO,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACXL,OAAA,CAACJ,GAAG;MAAAS,QAAA,gBACFL,OAAA;QAAII,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3CT,OAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNT,OAAA,CAACF,KAAK;QAACY,OAAO;QAACC,QAAQ;QAACC,KAAK;QAACR,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eACtDL,OAAA;UAAAK,QAAA,EACGF,IAAI,CAACU,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBAClBf,OAAA;YAAAK,QAAA,gBACEL,OAAA;cAAAK,QAAA,EAAKU,CAAC,GAAG;YAAC;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAChBT,OAAA;cAAAK,QAAA,EAAKS,IAAI,CAACE;YAAI;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACpBT,OAAA;cAAAK,QAAA,EAAKS,IAAI,CAACG;YAAE;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAClBT,OAAA;cAAAK,QAAA,EAAI;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GAJTM,CAAC;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKN,CACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNT,OAAA,CAACJ,GAAG;MAAAS,QAAA,gBACFL,OAAA;QAAII,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzCT,OAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAAC,GAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAGV,CAAC;AAACS,EAAA,GA1BOjB,aAAa;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}