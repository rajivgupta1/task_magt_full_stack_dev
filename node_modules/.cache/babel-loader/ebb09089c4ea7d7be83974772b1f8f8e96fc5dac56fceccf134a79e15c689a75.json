{"ast":null,"code":"var _jsxFileName = \"/Users/rambo/Desktop/not to do full stack/client/src/components/TaskForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport { toast } from 'react-toastify';\nimport { postTask } from \"../helper/axiosHelper\";\nimport { fetchTasks } from \"../helper/axiosHelper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TaskForm = _ref => {\n  _s();\n  let {\n    getTaskList\n  } = _ref;\n  const [form, setForm] = useState({});\n  const handleOnChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    // console.log(name, value);\n    setForm({\n      ...form,\n      [name]: value\n    });\n  };\n  // console.log(form);\n\n  const handleOnSubmit = async e => {\n    e.preventDefault();\n    console.log(form);\n\n    // send data  to the api\n    const respPromise = postTask(form);\n    toast.promise(respPromise, {\n      pending: \"please wait...\"\n    });\n    const {\n      status,\n      message\n    } = await respPromise;\n    toast[status](message);\n    if (status === \"success\") ;\n    {\n      //call the api to fetch all the tasks\n      getTaskList();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \" border p-2 bg-light rounded\",\n    onSubmit: handleOnSubmit,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"g-2\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          placeholder: \"watching tv\",\n          name: \"task\",\n          onChange: handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"2\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          placeholder: \"33\",\n          type: \"number\",\n          name: \"hr\",\n          onChange: handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"d-grid\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"vOzvWZDsoCRExenMJTZow4WC08Q=\");\n_c = TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["useState","Button","Col","Form","Row","toast","postTask","fetchTasks","jsxDEV","_jsxDEV","TaskForm","_ref","_s","getTaskList","form","setForm","handleOnChange","e","name","value","target","handleOnSubmit","preventDefault","console","log","respPromise","promise","pending","status","message","className","onSubmit","children","md","Control","required","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","variant","_c","$RefreshReg$"],"sources":["/Users/rambo/Desktop/not to do full stack/client/src/components/TaskForm.js"],"sourcesContent":["\nimport { useState } from \"react\";\n\nimport { Button } from \"react-bootstrap\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\n\nimport { toast } from 'react-toastify';\nimport { postTask } from \"../helper/axiosHelper\";\nimport { fetchTasks } from \"../helper/axiosHelper\";\n\n\nexport const TaskForm = ({getTaskList}) => {\n  \n  const [form, setForm] = useState({});\n\n  const handleOnChange = (e) =>{\n    const {name,value} = e.target;\n    // console.log(name, value);\n     setForm({\n      ...form,\n      [name]: value,\n     });\n  };\n  // console.log(form);\n\n  const handleOnSubmit = async (e)=>{\n    e.preventDefault();\n    console.log(form);\n\n      // send data  to the api\n      const respPromise = postTask(form);\n\n      toast.promise(respPromise, {\n      pending: \"please wait...\",\n      });\n\nconst { status, message }= await respPromise;\ntoast[status](message);\n  \nif (status === \"success\");{\n\n//call the api to fetch all the tasks\ngetTaskList();\n    }\n  };\n\n\n  return (\n\n    <Form className=\" border p-2 bg-light rounded\" onSubmit= {handleOnSubmit}>\n      <Row className=\"g-2\">\n        <Col md=\"6\">\n          <Form.Control required placeholder=\"watching tv\" name=\"task\" onChange={handleOnChange} />\n        </Col>\n        <Col md=\"2\">\n          <Form.Control required placeholder=\"33\" type=\"number\" name=\"hr\" onChange={handleOnChange}/>\n        </Col>\n        <Col className=\"d-grid\">\n          <Button variant=\"primary\" type=\"submit\">Add Task</Button>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}